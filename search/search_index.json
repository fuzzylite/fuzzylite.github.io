{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"FuzzyLite","text":""},{"location":"#the-fuzzylite-libraries-for-fuzzy-logic-control","title":"The FuzzyLite Libraries for Fuzzy Logic Control","text":"<p>by Juan Rada-Vilela, PhD </p> <p></p> <p> The objective of the FuzzyLite Libraries is to easily design and efficiently operate fuzzy logic controllers  using object-oriented programming with minimal reliance on external libraries. </p>"},{"location":"#license","title":"License","text":"<p>The FuzzyLite Libraries are dual-licensed under:</p> <ul> <li>the GNU General Public License 3.0 and</li> <li>a paid license for commercial purposes.</li> </ul> <p>Please contact <code>sales@fuzzylite.com</code> for more information.</p>"},{"location":"#repositories","title":"Repositories","text":""},{"location":"#fuzzylite-c","title":"fuzzylite (C++)","text":""},{"location":"#pyfuzzylite-python","title":"pyfuzzylite (Python)","text":""},{"location":"#jfuzzylite-java","title":"jfuzzylite (Java)","text":""},{"location":"#help","title":"help","text":""},{"location":"#examples","title":"Examples","text":"FuzzyLite LanguageC++PythonJava <pre><code># File: examples/mamdani/ObstacleAvoidance.fll\nEngine: ObstacleAvoidance\nInputVariable: obstacle\n  enabled: true\n  range: 0.000 1.000\n  lock-range: false\n  term: left Ramp 1.000 0.000\n  term: right Ramp 0.000 1.000\nOutputVariable: mSteer\n  enabled: true\n  range: 0.000 1.000\n  lock-range: false\n  aggregation: Maximum\n  defuzzifier: Centroid 100\n  default: nan\n  lock-previous: false\n  term: left Ramp 1.000 0.000\n  term: right Ramp 0.000 1.000\nRuleBlock: mamdani\n  enabled: true\n  conjunction: none\n  disjunction: none\n  implication: AlgebraicProduct\n  activation: General\n  rule: if obstacle is left then mSteer is right\n  rule: if obstacle is right then mSteer is left\n</code></pre> <pre><code>// C++\n#include \"fl/Headers.h\"\n\nfl::Engine* engine = fl::FllImporter().fromFile(\"examples/mamdani/ObstacleAvoidance.fll\");\n</code></pre> <pre><code># Python\nimport fuzzylite as fl\n\nengine = fl.FllImporter().from_file(\"examples/mamdani/ObstacleAvoidance.fll\")\n</code></pre> <pre><code>// Java\nimport com.fuzzylite.*;\n\nEngine engine = new FllImporter().fromFile(\"examples/mamdani/ObstacleAvoidance.fll\");\n</code></pre> <pre><code>#include \"fl/Headers.h\"\n\nusing namespace fl;\n\nEngine* engine = new Engine;\nengine-&gt;setName(\"ObstacleAvoidance\");\n\nInputVariable* obstacle = new InputVariable;\nobstacle-&gt;setName(\"obstacle\");\nobstacle-&gt;setDescription(\"\");\nobstacle-&gt;setEnabled(true);\nobstacle-&gt;setRange(0.000, 1.000);\nobstacle-&gt;setLockValueInRange(false);\nobstacle-&gt;addTerm(new Ramp(\"left\", 1.000, 0.000));\nobstacle-&gt;addTerm(new Ramp(\"right\", 0.000, 1.000));\nengine-&gt;addInputVariable(obstacle);\n\nOutputVariable* mSteer = new OutputVariable;\nmSteer-&gt;setName(\"mSteer\");\nmSteer-&gt;setDescription(\"\");\nmSteer-&gt;setEnabled(true);\nmSteer-&gt;setRange(0.000, 1.000);\nmSteer-&gt;setLockValueInRange(false);\nmSteer-&gt;setAggregation(new Maximum);\nmSteer-&gt;setDefuzzifier(new Centroid(100));\nmSteer-&gt;setDefaultValue(fl::nan);\nmSteer-&gt;setLockPreviousValue(false);\nmSteer-&gt;addTerm(new Ramp(\"left\", 1.000, 0.000));\nmSteer-&gt;addTerm(new Ramp(\"right\", 0.000, 1.000));\nengine-&gt;addOutputVariable(mSteer);\n\nRuleBlock* mamdani = new RuleBlock;\nmamdani-&gt;setName(\"mamdani\");\nmamdani-&gt;setDescription(\"\");\nmamdani-&gt;setEnabled(true);\nmamdani-&gt;setConjunction(fl::null);\nmamdani-&gt;setDisjunction(fl::null);\nmamdani-&gt;setImplication(new AlgebraicProduct);\nmamdani-&gt;setActivation(new General);\nmamdani-&gt;addRule(Rule::parse(\"if obstacle is left then mSteer is right\", engine));\nmamdani-&gt;addRule(Rule::parse(\"if obstacle is right then mSteer is left\", engine));\nengine-&gt;addRuleBlock(mamdani);\n</code></pre> <pre><code>import fuzzylite as fl\n\nengine = fl.Engine(\n    name=\"ObstacleAvoidance\",\n    input_variables=[\n        fl.InputVariable(\n            name=\"obstacle\",\n            minimum=0.0,\n            maximum=1.0,\n            lock_range=False,\n            terms=[fl.Ramp(\"left\", 1.0, 0.0), fl.Ramp(\"right\", 0.0, 1.0)],\n        )\n    ],\n    output_variables=[\n        fl.OutputVariable(\n            name=\"mSteer\",\n            minimum=0.0,\n            maximum=1.0,\n            lock_range=False,\n            lock_previous=False,\n            default_value=fl.nan,\n            aggregation=fl.Maximum(),\n            defuzzifier=fl.Centroid(resolution=100),\n            terms=[fl.Ramp(\"left\", 1.0, 0.0), fl.Ramp(\"right\", 0.0, 1.0)],\n        )\n    ],\n    rule_blocks=[\n        fl.RuleBlock(\n            name=\"mamdani\",\n            conjunction=None,\n            disjunction=None,\n            implication=fl.AlgebraicProduct(),\n            activation=fl.General(),\n            rules=[\n                fl.Rule.create(\"if obstacle is left then mSteer is right\"),\n                fl.Rule.create(\"if obstacle is right then mSteer is left\"),\n            ],\n        )\n    ],\n)\n</code></pre> <pre><code>import com.fuzzylite.*;\n\nEngine engine = new Engine();\nengine.setName(\"ObstacleAvoidance\");\n\nInputVariable obstacle = new InputVariable();\nobstacle.setName(\"obstacle\");\nobstacle.setDescription(\"\");\nobstacle.setEnabled(true);\nobstacle.setRange(0.000, 1.000);\nobstacle.setLockValueInRange(false);\nobstacle.addTerm(new Ramp(\"left\", 1.000, 0.000));\nobstacle.addTerm(new Ramp(\"right\", 0.000, 1.000));\nengine.addInputVariable(obstacle);\n\nOutputVariable mSteer = new OutputVariable();\nmSteer.setName(\"mSteer\");\nmSteer.setDescription(\"\");\nmSteer.setEnabled(true);\nmSteer.setRange(0.000, 1.000);\nmSteer.setLockValueInRange(false);\nmSteer.setAggregation(new Maximum());\nmSteer.setDefuzzifier(new Centroid(100));\nmSteer.setDefaultValue(Double.NaN);\nmSteer.setLockPreviousValue(false);\nmSteer.addTerm(new Ramp(\"left\", 1.000, 0.000));\nmSteer.addTerm(new Ramp(\"right\", 0.000, 1.000));\nengine.addOutputVariable(mSteer);\n\nRuleBlock mamdani = new RuleBlock();\nmamdani.setName(\"mamdani\");\nmamdani.setDescription(\"\");\nmamdani.setEnabled(true);\nmamdani.setConjunction(null);\nmamdani.setDisjunction(null);\nmamdani.setImplication(new AlgebraicProduct());\nmamdani.setActivation(new General());\nmamdani.addRule(Rule.parse(\"if obstacle is left then mSteer is right\", engine));\nmamdani.addRule(Rule.parse(\"if obstacle is right then mSteer is left\", engine));\nengine.addRuleBlock(mamdani);\n</code></pre>"},{"location":"#features","title":"Features","text":""},{"location":"#6-controller-types","title":"<code>6</code> Controller Types","text":"<p>Mamdani, Takagi-Sugeno, Larsen, Tsukamoto, Inverse Tsukamoto, Hybrid.</p>"},{"location":"#25-linguistic-terms","title":"<code>25</code> Linguistic Terms","text":"<p><code>5</code> Basic: Triangle, Trapezoid, Rectangle, Discrete, SemiEllipse.</p> <p><code>8</code> Extended: Bell, Cosine, Gaussian, GaussianProduct, PiShape, SigmoidDifference, SigmoidProduct, Spike.</p> <p><code>7</code> Edges: Arc, Binary, Concave, Ramp, Sigmoid, SShape, ZShape.</p> <p><code>3</code> Functions: Constant, Linear, Function.</p> <p><code>2</code> Special: Aggregated, Activated.</p>"},{"location":"#7-activation-methods","title":"<code>7</code> Activation methods","text":"<p>General, Proportional, Threshold, First, Last, Lowest, Highest.</p>"},{"location":"#9-t-norms-for-conjunction-and-implication","title":"<code>9</code> T-Norms for Conjunction and Implication","text":"<p>Minimum, AlgebraicProduct, BoundedDifference, DrasticProduct, EinsteinProduct, HamacherProduct, NilpotentMinimum, LambdaNorm, FunctionNorm.</p>"},{"location":"#11-s-norms-for-disjunction-and-aggregation","title":"<code>11</code> S-Norms for Disjunction and Aggregation","text":"<p>Maximum, AlgebraicSum, BoundedSum, DrasticSum, EinsteinSum, HamacherSum, NilpotentMaximum, NormalizedSum, UnboundedSum, LambdaNorm, FunctionNorm.</p>"},{"location":"#7-defuzzifiers","title":"<code>7</code> Defuzzifiers","text":"<p><code>5</code> Integral: Centroid, Bisector, SmallestOfMaximum, LargestOfMaximum, MeanOfMaximum.</p> <p><code>2</code> Weighted: WeightedAverage, WeightedSum.</p>"},{"location":"#7-hedges","title":"<code>7</code> Hedges","text":"<p>Any, Not, Extremely, Seldom, Somewhat, Very, Function.</p>"},{"location":"#3-importers","title":"<code>3</code> Importers","text":"<p>FuzzyLite Language (<code>fll</code>), Fuzzy Inference System (<code>fis</code>), Fuzzy Control Language (<code>fcl</code>).</p>"},{"location":"#8-exporters","title":"<code>8</code> Exporters","text":"<p><code>Python</code>,  <code>C++</code>, <code>Java</code>, FuzzyLite Language (<code>fll</code>), FuzzyLite Dataset (<code>fld</code>), <code>R</code> script, Fuzzy Inference System (<code>fis</code>), Fuzzy Control Language (<code>fcl</code>).</p>"},{"location":"#30-examples","title":"<code>30+</code> Examples","text":"<p>Mamdani, Takagi-Sugeno, Tsukamoto, and Hybrid controllers from <code>fuzzylite</code>, Octave, and Matlab.</p> <p>Examples in <code>C++</code>, <code>Python</code>, <code>Java</code>, <code>fll</code>, <code>fld</code>, <code>R</code>, <code>fis</code>, and <code>fcl</code>.</p>"},{"location":"#flexibility","title":"Flexibility","text":"<p>Easily extend the library by adding your own linguistic terms, activation methods, T-Norms and S-Norms, defuzzifiers, and hedges.</p>"},{"location":"#reference","title":"Reference","text":"<p>FuzzyLite-Libraries.pdfPDF Article</p> <p>If you are using the FuzzyLite Libraries, please cite our article as follows:</p> <p>Juan Rada-Vilela. The FuzzyLite Libraries for Fuzzy Logic Control, 2018. URL https://fuzzylite.com.</p> <p>Or using <code>bibtex</code>:</p> <pre><code>@misc{\n    fl::fuzzylite,\n    author={Juan Rada-Vilela},\n    title={The FuzzyLite Libraries for Fuzzy Logic Control},\n    url={https://fuzzylite.com},\n    year={2018}\n}\n</code></pre> <p><code>fuzzylite</code>\u00ae is a registered trademark of FuzzyLite Limited  <code>pyfuzzylite</code>\u2122 is a trademark of FuzzyLite Limited  <code>jfuzzylite</code>\u2122 is a trademark of FuzzyLite Limited  <code>QtFuzzyLite</code>\u2122 is a trademark of FuzzyLite Limited </p>"},{"location":"QtFuzzyLite/","title":"QtFuzzyLite","text":"<p>QtFuzzyLite is a commercial and closed-source application to visually design and operate fuzzy logic controllers using the FuzzyLite Libraries. You can download it and check it out for free in the Downloads page.</p>"},{"location":"QtFuzzyLite/#screenshots","title":"Screenshots","text":"WindowsLinuxMac"},{"location":"QtFuzzyLite/#features","title":"Features","text":"<p>ALL  the features from the FuzzyLite Libraries plus you can:</p> <ul> <li>Benchmark your fuzzy logic controllers.</li> <li>Simulate the operation of your fuzzy logic controllers at any frame rate based on data that you can: manually input   into the Editor, retrieved from Files, or even using Client/Server communication over TCP/IP.</li> <li>Plot the surface of your controllers in 2D for any pair of variables you choose, or automatically create R scripts to   generate it using the ggplot2 libraries.</li> <li>Use beautiful combinations of colours to display and export your controllers: FuzzyLite (Default), Alpine, Desert,   Lake, Mountain, Twilight, and Volcano.</li> <li>Better visualize your variables with Integral, Cardinal, Ordinal views.</li> <li>Design your controllers with multiple rule blocks and activation methods.</li> <li>Easy and intuitive Editor of Variables, Terms and Rule Blocks.</li> <li>Export every component to the FuzzyLite Language (FLL) in   one   click.</li> <li>Manually or automatically sort the terms of any variable.</li> <li>Show predefined templates when importing controllers.</li> <li>Easily duplicate linguistic terms with options: Manual, Range, Symmetric, Next Term.</li> <li>Show tooltips with valuable information, and Vertical or Horizontal guides.</li> <li>Visualize \\(\\tilde{y}\\) or \\(\\mu(y)\\) in Output Variables.</li> <li>Seamlessly use <code>NaN</code> and <code>Inf</code> values in components.</li> </ul> <p>Please, read the End User License Agreement (EULA) before purchasing a license.</p> <p>Your purchase is an implied agreement that you accept the conditions expressed in the EULA.</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#juan-rada-vilela-phd","title":"Juan Rada-Vilela, PhD","text":"<p>Creator of FuzzyLite | PhD in Artificial Intelligence | Full-Stack Senior Data Scientist</p> <p> jcrada@gmail.com \u00a0 \u2022 \u00a0  github.com/fuzzylite \u00a0 \u2022 \u00a0  Google Profile \u00a0 \u2022 \u00a0  LinkedIn</p>"},{"location":"about/#areas-of-expertise","title":"Areas of Expertise","text":"<p>Data Science \u00a0 Machine Learning \u2022 Software Engineering \u2022 Statistics \u2022 Analytics \u2022 Visualisation \u2022 Storytelling \u2022 Agile</p> <p>Artificial Intelligence \u00a0 Soft Computing \u2022 Fuzzy Logic \u2022 Neural Networks \u2022 Swarm Intelligence \u2022 Evolutionary Computation</p> <p>Software Engineering \u00a0 Software Design and Development \u2022 Object-Oriented Programming \u2022 Cloud Computing</p>"},{"location":"about/#entrepreneurship","title":"Entrepreneurship","text":"<p>Director at FuzzyLite \u2013 Wellington, New Zealand Working on a popular fuzzy logic control library and application \u2013  Python \u2022 C++ \u2022 Java \u2022 Qt</p>"},{"location":"about/#education","title":"Education","text":"<p>Specialisations in Deep Learning and Natural Language Processing at DeepLearning.AI \u2013 Coursera</p> <p>Doctor of Philosophy in Artificial Intelligence at Victoria University of Wellington \u2013 New Zealand</p> <p>Master in Soft Computing and Intelligent Data Analysis at European Centre for Soft Computing \u2013 Spain</p> <p>Master of Science in Artificial Intelligence at Universidad Centroccidental Lisandro Alvarado \u2013 Venezuela</p> <p>Bachelor of Engineering with Honours in Computer Engineering at Universidad Ferm\u00edn Toro \u2013 Venezuela</p>"},{"location":"about/#software-projects","title":"Software Projects","text":"<p>QtFuzzyLite 6 \u00a0 A commercial application to easily design and efficiently operate fuzzy logic controllers</p> <p>fuzzylite \u00a0 A free and open-source library to design and operate fuzzy logic controllers in C++</p> <p>pyfuzzylite \u00a0 A free and open-source library to design and operate fuzzy logic controllers in Python</p> <p>jfuzzylite \u00a0 A free and open-source library to design and operate fuzzy logic controllers in Java</p>"},{"location":"about/#software-skills","title":"Software Skills","text":""},{"location":"about/#expert","title":"Expert","text":"<p>Programming (Python \u2022 C++ \u2022 Java) \u00a0 Scientific (PySpark \u2022 pandas \u2022 plotly) \u00a0 Databases (SQL \u2022 SQLite \u2022 PostgreSQL) \u00a0 IDEs (Jupyter \u2022 PyCharm \u2022 VSCode) \u00a0 Operating Systems (macOS \u2022 Linux \u2022 Windows) \u00a0 Libraries (Qt) \u00a0 Documents (LaTeX \u2022 Markdown \u2022 JSON \u2022 XML) \u00a0 Others (git)</p>"},{"location":"about/#proficient","title":"Proficient","text":"<p>Programming (Dart \u2022 R) \u00a0 Scientific (PyTorch \u2022 NumPy \u2022 scikit-learn) \u00a0 Databases (MySQL \u2022 MS SQL Server \u2022 H2) \u00a0 IDEs (Android Studio \u2022 RStudio) \u00a0 Operating Systems (Android \u2022 iOS) \u00a0 Cloud (AWS \u2022 New Relic \u2022 Tableau) \u00a0 Libraries (Flutter \u2022 FastAPI \u2022 SQLAlchemy) \u00a0 Others (Parallel Computing \u2022 Docker \u2022 Wordpress \u2022 CMake)</p>"},{"location":"about/#competent","title":"Competent","text":"<p>Programming (C# \u2022 Matlab) \u00a0 Scientific (Tensorflow \u2022 networkx) \u00a0 Cloud (Azure \u2022 Sumo Logic) \u00a0 IDEs (Xcode) \u00a0 Libraries (OpenGL \u2022 OpenCV \u2022 Bullet Physics) \u00a0 Others  (Maven \u2022 Jenkins)</p>"},{"location":"about/#scholarships","title":"Scholarships","text":"<p>Royal Society Marsden Fund for Doctor of Philosophy in Artificial Intelligence \u2013 New Zealand</p> <p>Victoria PhD for Doctor of Philosophy in Artificial Intelligence \u2013 New Zealand</p> <p>European Centre for Soft Computing for Master in Soft Computing and Intelligent Data Analysis \u2014 Spain</p> <p>Universidad Ferm\u00edn Toro for Graduate Diploma in Tertiary Teaching \u2014 Venezuela</p>"},{"location":"about/#languages","title":"Languages","text":"<p>Spanish (native)  \u2022 English (fluent) \u2022 French (advanced) \u2022 Italian (intermediate)</p>"},{"location":"buy/","title":"Buy","text":""},{"location":"buy/#fuzzylite-libraries","title":"FuzzyLite Libraries","text":"<p>Check github.com/sponsors/fuzzylite for sponsorship options to buy a commercial license of the FuzzyLite Libraries</p> <p>However, if you require alternative licensing options, please do not hesitate and contact <code>sales@fuzzylite.com</code></p> <p>We are always looking forward to helping your company integrate the FuzzyLite libraries into your solutions</p>"},{"location":"buy/#qtfuzzylite","title":"QtFuzzyLite","text":"<p>To buy a commercial license of QtFuzzyLite please choose the option below that best matches your use case</p>"},{"location":"documentation/","title":"Documentation","text":"<ul> <li>fuzzylite (C++)</li> <li>pyfuzzylite (Python)</li> </ul>"},{"location":"downloads/","title":"Downloads","text":"<p>Please  Buy   a license of QtFuzzyLite to support the development of the libraries.</p> <p>Windows 64-bitfuzzylite-6.0-Win64.zip</p> <p>Windows 32-bitfuzzylite-6.0-Win32.zip</p> <p>Linux 64-bitfuzzylite-6.0-linux64.zip</p> <p>Mac (Intel)fuzzylite-6.0-mac.zip</p> <p>Java/Androidjfuzzylite-6.0.1.zip</p> <p>PDF ArticleFuzzyLite-Libraries.pdf</p>"},{"location":"jcrada/","title":"Jcrada","text":""},{"location":"jcrada/#juan-rada-vilela-phd","title":"Juan Rada-Vilela, PhD","text":"<p>Creator of FuzzyLite | PhD in Artificial Intelligence | Full-Stack Senior Data Scientist</p> <p> jcrada@gmail.com \u00a0 \u2022 \u00a0  github.com/fuzzylite \u00a0 \u2022 \u00a0  Google Profile \u00a0 \u2022 \u00a0  LinkedIn</p>"},{"location":"jcrada/#areas-of-expertise","title":"Areas of Expertise","text":"<p>Data Science \u00a0 Machine Learning \u2022 Software Engineering \u2022 Statistics \u2022 Analytics \u2022 Visualisation \u2022 Storytelling \u2022 Agile</p> <p>Artificial Intelligence \u00a0 Soft Computing \u2022 Fuzzy Logic \u2022 Neural Networks \u2022 Swarm Intelligence \u2022 Evolutionary Computation</p> <p>Software Engineering \u00a0 Software Design and Development \u2022 Object-Oriented Programming \u2022 Cloud Computing</p>"},{"location":"jcrada/#entrepreneurship","title":"Entrepreneurship","text":"<p>Director at FuzzyLite \u2013 Wellington, New Zealand Working on a popular fuzzy logic control library and application \u2013  Python \u2022 C++ \u2022 Java \u2022 Qt</p>"},{"location":"jcrada/#education","title":"Education","text":"<p>Specialisations in Deep Learning and Natural Language Processing at DeepLearning.AI \u2013 Coursera</p> <p>Doctor of Philosophy in Artificial Intelligence at Victoria University of Wellington \u2013 New Zealand</p> <p>Master in Soft Computing and Intelligent Data Analysis at European Centre for Soft Computing \u2013 Spain</p> <p>Master of Science in Artificial Intelligence at Universidad Centroccidental Lisandro Alvarado \u2013 Venezuela</p> <p>Bachelor of Engineering with Honours in Computer Engineering at Universidad Ferm\u00edn Toro \u2013 Venezuela</p>"},{"location":"jcrada/#software-projects","title":"Software Projects","text":"<p>QtFuzzyLite 6 \u00a0 A commercial application to easily design and efficiently operate fuzzy logic controllers</p> <p>fuzzylite \u00a0 A free and open-source library to design and operate fuzzy logic controllers in C++</p> <p>pyfuzzylite \u00a0 A free and open-source library to design and operate fuzzy logic controllers in Python</p> <p>jfuzzylite \u00a0 A free and open-source library to design and operate fuzzy logic controllers in Java</p>"},{"location":"jcrada/#software-skills","title":"Software Skills","text":""},{"location":"jcrada/#expert","title":"Expert","text":"<p>Programming (Python \u2022 C++ \u2022 Java) \u00a0 Scientific (PySpark \u2022 pandas \u2022 plotly) \u00a0 Databases (SQL \u2022 SQLite \u2022 PostgreSQL) \u00a0 IDEs (Jupyter \u2022 PyCharm \u2022 VSCode) \u00a0 Operating Systems (macOS \u2022 Linux \u2022 Windows) \u00a0 Libraries (Qt) \u00a0 Documents (LaTeX \u2022 Markdown \u2022 JSON \u2022 XML) \u00a0 Others (git)</p>"},{"location":"jcrada/#proficient","title":"Proficient","text":"<p>Programming (Dart \u2022 R) \u00a0 Scientific (PyTorch \u2022 NumPy \u2022 scikit-learn) \u00a0 Databases (MySQL \u2022 MS SQL Server \u2022 H2) \u00a0 IDEs (Android Studio \u2022 RStudio) \u00a0 Operating Systems (Android \u2022 iOS) \u00a0 Cloud (AWS \u2022 New Relic \u2022 Tableau) \u00a0 Libraries (Flutter \u2022 FastAPI \u2022 SQLAlchemy) \u00a0 Others (Parallel Computing \u2022 Docker \u2022 Wordpress \u2022 CMake)</p>"},{"location":"jcrada/#competent","title":"Competent","text":"<p>Programming (C# \u2022 Matlab) \u00a0 Scientific (Tensorflow \u2022 networkx) \u00a0 Cloud (Azure \u2022 Sumo Logic) \u00a0 IDEs (Xcode) \u00a0 Libraries (OpenGL \u2022 OpenCV \u2022 Bullet Physics) \u00a0 Others  (Maven \u2022 Jenkins)</p>"},{"location":"jcrada/#scholarships","title":"Scholarships","text":"<p>Royal Society Marsden Fund for Doctor of Philosophy in Artificial Intelligence \u2013 New Zealand</p> <p>Victoria PhD for Doctor of Philosophy in Artificial Intelligence \u2013 New Zealand</p> <p>European Centre for Soft Computing for Master in Soft Computing and Intelligent Data Analysis \u2014 Spain</p> <p>Universidad Ferm\u00edn Toro for Graduate Diploma in Tertiary Teaching \u2014 Venezuela</p>"},{"location":"jcrada/#languages","title":"Languages","text":"<p>Spanish (native)  \u2022 English (fluent) \u2022 French (advanced) \u2022 Italian (intermediate)</p>"},{"location":"language/","title":"FuzzyLite Language","text":"<p>Definition</p> <pre><code># Comments start with a #\nEngine: identifier\n  description: text\nInputVariable: identifier\n  description: text\n  enabled: boolean\n  range: scalar scalar\n  lock-range: boolean\n  term: identifier Term [parameters]\nOutputVariable: identifier\n  description: text\n  enabled: boolean\n  range: scalar scalar\n  lock-range: boolean\n  aggregation: SNorm|none\n  defuzzifier: [Defuzzifier [parameters]]|none\n  default: scalar\n  lock-previous: boolean\n  term: identifier Term [parameters]\nRuleBlock: identifier\n  description: text\n  enabled: boolean\n  conjunction: TNorm|none\n  disjunction: SNorm|none\n  implication: TNorm|none\n  activation: [Activation [parameters]]|none\n  rule: if antecedent then consequent with weight\n</code></pre> <p>where:</p> <ul> <li><code>boolean</code>: is <code>true</code> or <code>false</code></li> <li><code>identifier</code>: is a valid variable name (ie, contains only letters, numbers, and <code>_</code>)</li> <li><code>scalar</code>: is any real number, including <code>inf</code> and <code>nan</code></li> <li><code>text</code>: is any one-line string of text</li> <li><code>none</code>: is the absence of value</li> </ul> <ul> <li><code>Term</code>: is the class name of the linguistic term</li> <li><code>SNorm</code> and <code>TNorm</code>: are the class names of the S-Norm and T-Norm, respectively</li> <li><code>Defuzzifier</code>: is the class name of the defuzzifier</li> <li><code>Activation</code>: is the class name of the activation method</li> </ul> <ul> <li>elements in square brackets are optional</li> </ul> <p>Example</p> <pre><code># from examples/mamdani/ObstacleAvoidance.fll\"  \nEngine: ObstacleAvoidance\n  description: An engine for obstacle avoidance\nInputVariable: obstacle\n  description: direction of the obstacle\n  enabled: true\n  range: 0.000 1.000\n  lock-range: false\n  term: left Ramp 1.000 0.000\n  term: right Ramp 0.000 1.000\nOutputVariable: mSteer\n  description: steering direction of the vehicle\n  enabled: true\n  range: 0.000 1.000\n  lock-range: false\n  aggregation: Maximum\n  defuzzifier: Centroid 100\n  default: nan\n  lock-previous: false\n  term: left Ramp 1.000 0.000\n  term: right Ramp 0.000 1.000\nRuleBlock: mamdani\n  description: Mamdani inference for steering\n  enabled: true\n  conjunction: none\n  disjunction: none\n  implication: AlgebraicProduct\n  activation: General\n  rule: if obstacle is left then mSteer is right\n  rule: if obstacle is right then mSteer is left\n</code></pre>"},{"location":"qt/","title":"QtFuzzyLite","text":"<p>QtFuzzyLite is a commercial and closed-source application to visually design and operate fuzzy logic controllers using the FuzzyLite Libraries. You can download it and check it out for free in the Downloads page.</p>"},{"location":"qt/#screenshots","title":"Screenshots","text":"WindowsLinuxMac"},{"location":"qt/#features","title":"Features","text":"<p>ALL  the features from the FuzzyLite Libraries plus you can:</p> <ul> <li>Benchmark your fuzzy logic controllers.</li> <li>Simulate the operation of your fuzzy logic controllers at any frame rate based on data that you can: manually input   into the Editor, retrieved from Files, or even using Client/Server communication over TCP/IP.</li> <li>Plot the surface of your controllers in 2D for any pair of variables you choose, or automatically create R scripts to   generate it using the ggplot2 libraries.</li> <li>Use beautiful combinations of colours to display and export your controllers: FuzzyLite (Default), Alpine, Desert,   Lake, Mountain, Twilight, and Volcano.</li> <li>Better visualize your variables with Integral, Cardinal, Ordinal views.</li> <li>Design your controllers with multiple rule blocks and activation methods.</li> <li>Easy and intuitive Editor of Variables, Terms and Rule Blocks.</li> <li>Export every component to the FuzzyLite Language (FLL) in   one   click.</li> <li>Manually or automatically sort the terms of any variable.</li> <li>Show predefined templates when importing controllers.</li> <li>Easily duplicate linguistic terms with options: Manual, Range, Symmetric, Next Term.</li> <li>Show tooltips with valuable information, and Vertical or Horizontal guides.</li> <li>Visualize \\(\\tilde{y}\\) or \\(\\mu(y)\\) in Output Variables.</li> <li>Seamlessly use <code>NaN</code> and <code>Inf</code> values in components.</li> </ul> <p>Please, read the End User License Agreement (EULA) before purchasing a license.</p> <p>Your purchase is an implied agreement that you accept the conditions expressed in the EULA.</p>"},{"location":"thanks/","title":"Thanks","text":"<p>Thank you to the community whose feedback and support has always been great to continue improving the libraries.</p> <p>Thank you to every user and organization who contributed purchasing licenses of <code>QtFuzzyLite</code> and the <code>FuzzyLite</code> libraries.</p> <p>Thank you to the European Centre for Soft Computing, the Foundation for the Advancement of Soft Computing, Sergio Guadarrama and Luis Magdalena for their support creating the first version of <code>fuzzylite</code>.</p> <p>Thank you to Dean Morrissey for his feedback on testing the operation of <code>fuzzylite</code> and validating its results; Adrien Cabarbaye for his feedback on discrete terms and feature requests on output variables; Massimo Canonico for his feedback on his experience and usage of fuzzylite in its early stages; Eva Millan for her feedback, ideas, and suggestions on rule chaining; Johannes Schauer for his work making fuzzylite directly available from Debian repositories; and Leonela Gazzano for her suggestions on activation methods.</p> <p>Thank you to Pablo Cingolani (<code>JFuzzyLogic</code>), Linda Markowsky (<code>Octave Fuzzy Logic Toolkit</code>), Roger Jang (<code>Matlab Fuzzy Logic Toolbox</code>), Edward S. Sazonov (<code>FuzzyEngine</code>), and their respective collaborators for open sourcing their great libraries.</p> <p>Special thanks to Mengjie Zhang and Mark Johnston (Victoria University of Wellington, New Zealand); Oscar Cord\u00f3n (European Centre for Soft Computing, Spain); Maritza Bracho, Carlos Lameda, Belkys Lameda, and Rub\u00e9n Parma (Universidad Centroccidental Lisandro Alvarado, Venezuela); and Yelitza Oviedo, Jorge Rodr\u00edguez, Edecio Freitez, Luis Alvarado, Jes\u00fas Contreras, and Oswaldo Hern\u00e1ndez (Universidad Ferm\u00edn Toro, Venezuela).</p>"},{"location":"videos/","title":"Videos","text":"<p>Warning</p> <p>The videos below were created several years ago,  and they may not entirely capture the current state of the FuzzyLite Libraries.</p>"},{"location":"videos/#tutorial-on-fuzzylite","title":"Tutorial on <code>fuzzylite</code>","text":""},{"location":"videos/#tutorial-on-qtfuzzylite","title":"Tutorial on <code>QtFuzzyLite</code>","text":""},{"location":"videos/#example-of-fuzzylite-on-the-3d-pole-balancing-problem","title":"Example of <code>fuzzylite</code> on the 3D pole balancing problem","text":""}]}